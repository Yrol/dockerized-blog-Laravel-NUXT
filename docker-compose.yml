version: "3"

######### Services ###################################

services:
  # Server container
  nginx:
    build:
      context: docker/nginx
      dockerfile: Dockerfile
    container_name: nginx_service
    restart: unless-stopped
    volumes:
      - ./:/var/www
      - ./docker/nginx/logs:/var/log/nginx
    ports:
      # Nuxt port
      - 8080:80
      # Laravel port
      - 8081:81
    depends_on:
      - client
      - php

  # PHP FastCGI Process Manager container
  php:
    build:
      context: docker/php
      dockerfile: Dockerfile
    container_name: php_service
    restart: unless-stopped
    volumes:
      - ./api:/var/www/api
    environment:
      COMPOSER_MEMORY_LIMIT: -1
      # In order to use xDebug, set remote_enable=0
      XDEBUG_CONFIG: "remote_enable=1"
      PHP_IDE_CONFIG: "serverName=Docker"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - mysql
      - redis
      - mailhog

  # Supervisor container (schedule and queue runner)
  supervisor:
    build:
      context: docker/supervisor
      dockerfile: Dockerfile
    container_name: supervisor_service
    restart: unless-stopped
    volumes:
      - ./:/var/www/
      - ./docker/supervisor/conf.d:/etc/supervisor/conf.d
      - ./docker/supervisor/logs:/var/log
    depends_on:
      - mysql
      - redis
      - mailhog

  # MySQL container
  mysql:
    build:
      context: docker/mysql
      dockerfile: Dockerfile
    container_name: mysql_service
    restart: unless-stopped
    tty: true #enable CLI/bash interface on the MySQL container
    volumes:
      - mysql-data:/var/lib/mysql/ # this is where the dat will be persisted locally (within the "mysql" directory).
      # Temp volume to allow using dumps
      # - ./docker/mysql/dumps/:/tmp/ # dev only
    ports:
      - "3307:3306"
    expose: #exposing the port to  be used locally (with local MySQL clients such as MySQLWorkbench & ect)
      - "3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_HOST: "%"
      SERVICE_NAME: mysql

  # Redis container
  redis:
    build:
      context: docker/redis
      dockerfile: Dockerfile
    container_name: redis_service
    restart: unless-stopped
    volumes:
      - redis:/data
    ports:
      - 63791:6379

  # Mailhog container (SMTP testing)
  mailhog:
    build:
      context: docker/mailhog
      dockerfile: Dockerfile
    container_name: mailhog_service
    ports:
      - 8026:8025

  # Client container
  client:
    build:
      context: docker/client
      dockerfile: Dockerfile
    container_name: client_service
    restart: unless-stopped
    volumes:
      - ./client:/var/www/client

######### Volumes ###################################

volumes:
  mysql-data:
    driver: local
  redis:
    driver: local
